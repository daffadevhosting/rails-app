    <header class="absolute top-0 left-0 w-full z-10 p-6 md:p-8">
        <nav class="container mx-auto flex justify-between items-center">
            <a href="/" class="text-2xl font-bold">Imagina</a>
            <a href="/" class="hidden md:inline-block bg-white/10 backdrop-blur-sm text-white font-semibold py-2 px-5 rounded-full hover:bg-white/20 transition-colors duration-300">
                Kembali ke Beranda
            </a>
        </nav>
    </header>


    <main class="container mx-auto px-6 pt-28 pb-16">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16">

            <div class=".hero-element flex flex-col space-y-10">
                <div>
                    <h1 class="text-4xl lg:text-5xl font-black">
                        Mulai <span class="bg-gradient-to-r from-purple-500 to-indigo-400 text-transparent bg-clip-text">Mencipta</span>
                    </h1>
                    <p class="mt-4 text-lg text-slate-400">Masukkan deskripsi gambar, lakukan pembayaran, dan biarkan AI kami bekerja untuk Anda.</p>
                </div>
                
                <div class="bg-slate-800/50 border border-slate-700 rounded-2xl p-8">
                    <form id="generate-form" class="space-y-6">
                        <div>
                            <label for="prompt-input" class="block text-sm font-medium text-slate-300 mb-2">Deskripsi Gambar (Prompt)</label>
                            <textarea
                                id="prompt-input"
                                name="prompt"
                                rows="3"
                                placeholder="Contoh: Seekor astronot kucing mengendarai motor di bulan, gaya sinematik..."
                                class="w-full border-slate-600 rounded-lg px-4 py-3 bg-slate-800 focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all duration-300"
                                required
                            ></textarea>
                        </div>
                        
                        <button
                            id="generate-btn"
                            type="submit"
                            class="w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white text-base font-bold px-6 py-4 rounded-full hover:scale-105 cta-glow disabled:opacity-60 disabled:scale-100 transition-all duration-300 flex items-center justify-center"
                        >
                            <span id="btn-text">Bayar Rp 2.000 & Generate</span>
                            <svg id="btn-spinner" class="w-5 h-5 ml-2 animate-spin hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
                            </svg>
                        </button>
                    </form>
                    <div id="toast" class="hidden text-sm px-4 py-3 rounded-lg mt-4 font-medium"></div>
                </div>

                <div>
                    <h2 class="text-2xl font-bold mb-4">Informasi Penting</h2>
                    <div class="space-y-6 text-slate-400">
                        <div>
                            <h3 class="font-semibold text-slate-200 mb-1">ğŸ’¡ FAQ</h3>
                            <ul class="list-disc list-inside space-y-1">
                                <li><strong>Berapa biaya per gambar?</strong> Rp 2.000 untuk satu kali proses generate.</li>
                                <li><strong>Berapa lama prosesnya?</strong> Setelah pembayaran berhasil, gambar akan diproses dalam 10-30 detik.</li>
                                <li><strong>Apakah bisa refund?</strong> Tidak, karena layanan bersifat digital dan instan setelah pembayaran.</li>
                            </ul>
                        </div>
                        <div>
                            <h3 class="font-semibold text-slate-200 mb-1">ğŸ“œ Ketentuan Layanan</h3>
                            <p class="text-sm">
                                Dengan menggunakan layanan ini, Anda setuju untuk tidak menggunakan gambar untuk konten ilegal, kekerasan, atau SARA. Kami berhak menolak prompt yang melanggar kebijakan.
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="lg:sticky lg:top-28 h-full">
                <h2 class="text-2xl font-bold mb-4">Hasil Gambar Anda</h2>
                <div id="preview-area" class="relative w-full aspect-square bg-slate-800/50 border-2 border-dashed border-slate-700 rounded-2xl flex items-center justify-center overflow-hidden">
                    
                    <div id="preview-placeholder" class="text-center text-slate-500 p-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
                        <p class="mt-2 font-semibold">Gambar Anda akan muncul di sini</p>
                    </div>

                    <img id="preview-image" src="" alt="Hasil Gambar AI" class="absolute w-full h-full object-cover hidden">
                </div>
                 <a id="download-btn" href="#" download="imagina-result.png" class="hidden w-full mt-4 bg-green-600 text-white text-base font-bold px-6 py-3 rounded-full hover:bg-green-700 transition-all duration-300 items-center justify-center">
                    Unduh Gambar
                </a>
            </div>
        </div>
    </main>                                

<script>
document.addEventListener("turbo:load", function() {

    const myForm = document.querySelector("#generate-form");
    const promptInput = document.querySelector("#prompt-input");
    const button = document.querySelector("#generate-btn");
    const btnText = document.querySelector("#btn-text");
    const btnSpinner = document.querySelector("#btn-spinner");
    const toast = document.querySelector("#toast");
    const previewPlaceholder = document.querySelector("#preview-placeholder");
    const previewImage = document.querySelector("#preview-image");
    const downloadBtn = document.querySelector("#download-btn");

    if (!myForm) {
        return;
    }

    myForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const prompt = promptInput.value.trim();
        if (!prompt) return;

        button.disabled = true;
        btnText.textContent = "Memproses...";
        btnSpinner.classList.remove("hidden");
        
        previewImage.classList.add("hidden");
        downloadBtn.classList.add('hidden');
        previewPlaceholder.classList.remove("hidden");

        try {
            const res = await fetch("/generator/pay", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ prompt })
            });

            const data = await res.json();

            if (data.snap_token) {
                showToast("Membuka jendela pembayaran...", "blue");
                window.snap.pay(data.snap_token, {
                    onSuccess: function (result) {
                        showToast("Pembayaran berhasil! Meng-generate gambar...", "green");
                        btnText.textContent = "Generating...";
                        generateImage(prompt);
                    },
                    onPending: function (result) {
                        showToast("Pembayaran Anda tertunda.", "yellow");
                        resetButton();
                    },
                    onError: function (result) {
                        showToast("Pembayaran gagal. Silakan coba lagi.", "red");
                        resetButton();
                    },
                    onClose: function () {
                        // Cek kondisi sebelum mereset untuk menghindari reset setelah sukses
                        if (btnText.textContent !== "Generating...") {
                             showToast("Jendela pembayaran ditutup.", "yellow");
                             resetButton();
                        }
                    }
                });
            } else {
                showToast(data.error || "Gagal mendapatkan token pembayaran.", "red");
                resetButton();
            }
        } catch (err) {
            showToast("Terjadi kesalahan. Periksa koneksi Anda.", "red");
            resetButton();
        }
    });

    function showToast(msg, color = "green") {
        if (!toast) return;
        const colors = {
            green: "bg-green-500/20 border border-green-500 text-green-300",
            red: "bg-red-500/20 border border-red-500 text-red-300",
            yellow: "bg-yellow-500/20 border border-yellow-500 text-yellow-300",
            blue: "bg-blue-500/20 border border-blue-500 text-blue-300"
        };
        toast.textContent = msg;
        toast.className = `text-sm px-4 py-3 rounded-lg mt-4 font-medium transition-opacity duration-300 ${colors[color]}`;
        toast.classList.remove("hidden");

        gsap.fromTo(toast, { autoAlpha: 0, y: -10 }, { autoAlpha: 1, y: 0, duration: 0.5, ease: "power2.out" });
        
        setTimeout(() => {
            gsap.to(toast, { autoAlpha: 0, duration: 0.5, onComplete: () => toast.classList.add("hidden") });
        }, 4000);
    }

    function resetButton() {
        button.disabled = false;
        btnText.textContent = "Bayar Rp 2.000 & Generate";
        btnSpinner.classList.add("hidden");
    }

    async function generateImage(prompt) {
        try {
            const res = await fetch("/generator/image", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ prompt })
            });

            if (!res.ok) throw new Error('Gagal mengambil gambar dari server.');

            const blob = await res.blob();
            const imageUrl = URL.createObjectURL(blob);
            
            previewImage.src = imageUrl;
            downloadBtn.href = imageUrl;

            previewPlaceholder.classList.add("hidden");
            previewImage.classList.remove("hidden");
            downloadBtn.classList.remove('hidden');
            downloadBtn.style.display = 'flex';
            
            gsap.fromTo(previewImage, { autoAlpha: 0, scale: 0.95 }, { autoAlpha: 1, scale: 1, duration: 0.6, ease: "power2.out" });

            showToast("Gambar berhasil dibuat!", "green");

        } catch(err) {
            showToast(err.message || "Gagal membuat gambar.", "red");
        } finally {
            resetButton();
        }
    }
});
</script>